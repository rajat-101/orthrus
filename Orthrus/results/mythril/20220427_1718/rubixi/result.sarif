{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "artifacts": [
        {
          "location": {
            "uri": "/rubixi.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "function",
          "name": "collectPercentOfFees(uint256)"
        },
        {
          "kind": "function",
          "name": "nextPayoutWhenPyramidBalanceTotalsApproximately()"
        },
        {
          "kind": "function",
          "name": "collectFeesInEther(uint256)"
        },
        {
          "kind": "function",
          "name": "participantDetails(uint256)"
        },
        {
          "kind": "function",
          "name": "fallback"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "collectPercentOfFees(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creator.send(feesToCollect)"
                  },
                  "startLine": 103
                }
              }
            }
          ],
          "message": {
            "text": "Ether send"
          },
          "ruleId": "AccessControl_13"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "collectPercentOfFees(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creator.send(feesToCollect)"
                  },
                  "startLine": 103
                }
              }
            }
          ],
          "message": {
            "text": "Transaction order dependence"
          },
          "ruleId": "FrontRunning_1"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "collectPercentOfFees(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creator.send(feesToCollect)"
                  },
                  "startLine": 103
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "nextPayoutWhenPyramidBalanceTotalsApproximately()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "participants[payoutOrder]"
                  },
                  "startLine": 141
                }
              }
            }
          ],
          "message": {
            "text": "Exception state"
          },
          "ruleId": "Other_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "collectFeesInEther(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creator.send(collectedFees)"
                  },
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Ether send"
          },
          "ruleId": "AccessControl_13"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "collectFeesInEther(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creator.send(collectedFees)"
                  },
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Transaction order dependence"
          },
          "ruleId": "FrontRunning_1"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "collectFeesInEther(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creator.send(collectedFees)"
                  },
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "participantDetails(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "participants[orderInPyramid]"
                  },
                  "startLine": 158
                }
              }
            }
          ],
          "message": {
            "text": "Exception state"
          },
          "ruleId": "Other_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "collectFeesInEther(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "_amt *= 1 ether"
                  },
                  "startLine": 90
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "collectFeesInEther(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creator.send(_amt)"
                  },
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Ether send"
          },
          "ruleId": "AccessControl_13"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "collectFeesInEther(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creator.send(_amt)"
                  },
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Transaction order dependence"
          },
          "ruleId": "FrontRunning_1"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "collectFeesInEther(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creator.send(_amt)"
                  },
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "participants[payoutOrder].etherAddress.send(payoutToSend)"
                  },
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Multiple Calls"
          },
          "ruleId": "Ignore_1"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/rubixi.sol"
                },
                "region": {
                  "snippet": {
                    "text": "participants[payoutOrder].etherAddress.send(payoutToSend)"
                  },
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Mythril analyses EVM bytecode using symbolic analysis, taint analysis and control flow checking to detect a variety of security vulnerabilities."
          },
          "informationUri": "https://mythx.io/",
          "name": "Mythril",
          "rules": [
            {
              "fullDescription": {
                "text": "In the function `collectPercentOfFees(uint256)` a non-zero amount of Ether is sent to an address taken from storage slot 5.\nThere is a check on storage index 5. This storage slot can be written to by calling the function `DynamicPyramid()`.\n\nThere is a check on storage index 5. This storage slot can be written to by calling the function `DynamicPyramid()`.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `fallback`."
              },
              "id": "AccessControl_13",
              "name": "AccessControlVulnerability",
              "shortDescription": {
                "text": "Ether send"
              }
            },
            {
              "fullDescription": {
                "text": "A possible transaction order independence vulnerability exists in function collectPercentOfFees(uint256). The value or direction of the call statement is determined from a tainted storage location"
              },
              "id": "FrontRunning_1",
              "name": "FrontRunningVulnerability",
              "shortDescription": {
                "text": "Transaction order dependence"
              }
            },
            {
              "fullDescription": {
                "text": "The return value of an external call is not checked. Note that execution continue even if the called contract throws."
              },
              "id": "UncheckedLowCalls_3",
              "name": "UncheckedLowCallsVulnerability",
              "shortDescription": {
                "text": "Unchecked CALL return value"
              }
            },
            {
              "fullDescription": {
                "text": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. "
              },
              "id": "Other_9",
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "Exception state"
              }
            },
            {
              "fullDescription": {
                "text": "A possible integer overflow exists in the function `collectFeesInEther(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer."
              },
              "id": "Arithmetic_4",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "Integer Overflow"
              }
            },
            {
              "fullDescription": {
                "text": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 3420\n"
              },
              "id": "Ignore_1",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "Multiple Calls"
              }
            }
          ],
          "version": "0.4.25"
        }
      }
    }
  ],
  "version": "2.1.0"
}